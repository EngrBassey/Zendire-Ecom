openapi: 3.0.0
info:
  title: Zendire E-commerce API
  version: 1.0.0
  description: Zendire E-commerce Application API Documentation
  contact:
    name: ''
    url: ''
    email: ''
servers:
  - url: http://localhost:5000
components:
  schemas:
    Product:
      type: object
      required:
        - name
        - description
        - price
        - sku
        - numberOfProductsAvailable
      properties:
        name:
          type: string
          description: The name of the product
        description:
          type: string
          description: The description of the product
        price:
          type: number
          description: The price of the product
        sku:
          type: string
          description: The SKU of the product
        numberOfProductsAvailable:
          type: number
          description: The number of product available
        images:
          type: array
          items:
            type: string
            format: binary
          description: The list of product images
      example:
        name: Sample Product
        description: This is a sample product
        price: 99.99
        sku: SAMPLE-SKU-001
        numberOfProductsAvailable: 100
        images: []
    Cart:
      type: object
      properties:
        user:
          type: string
        cartItems:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
              quantity:
                type: integer
              name:
                type: string
              price:
                type: number
              image:
                type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - name: product
    description: The product managing API
paths:
  /api/product:
    get:
      summary: Returns the list of all the product
      tags: [product]
      responses:
        200:
          description: The list of the product
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /api/product/new:
    post:
      summary: Create a new product
      tags: [product]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                sku:
                  type: string
                numberOfProductsAvailable:
                  type: number
                images:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        201:
          description: The product was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        400:
          description: Some fields are missing
        401:
          description: Unauthorized
  /api/product/update/{sku}:
    put:
      summary: Update a product
      tags: [product]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: sku
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                numberOfProductsAvailable:
                  type: number
                images:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        200:
          description: The product was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        400:
          description: The SKU is missing
        401:
          description: Unauthorized
        404:
          description: The product was not found
  /api/product/delete/{sku}:
    delete:
      summary: Delete a product
      tags: [product]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: sku
          schema:
            type: string
          required: true
      responses:
        200:
          description: The product was successfully deleted
        400:
          description: The SKU is missing
        401:
          description: Unauthorized
        404:
          description: The product was not found
  /api/product/{sku}:
    get:
      summary: Get a product by SKU
      tags: [product]
      parameters:
        - in: path
          name: sku
          schema:
            type: string
          required: true
      responses:
        200:
          description: The product description by SKU
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        400:
          description: The SKU is missing
        404:
          description: The product was not found
  /api/cart/add:
    post:
      summary: Add a product to the cart
      tags: [Cart]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - productSKU
                - quantity
              properties:
                product:
                  type: string
                  description: SKU of the product
                quantity:
                  type: integer
                  description: Quantity of the product
      responses:
        '200':
          description: Product added to cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  result:
                    type: object
        '400':
          description: Missing product or quantity
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /api/cart:
    get:
      summary: Retrieve the cart
      tags: [Cart]
      responses:
        '200':
          description: Cart retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  result:
                    type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /api/cart/remove/{productSKU}:
    delete:
      summary: Remove a product from the cart
      tags: [Cart]
      parameters:
        - in: path
          name: productSKU
          schema:
            type: string
          required: true
          description: ID of the product to remove
      responses:
        '200':
          description: Product removed from cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  result:
                    type: object
        '400':
          description: ProductSKU is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
